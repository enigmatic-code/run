#!/usr/bin/env python -u
# -*- mode: Python; py-indent-offset: 2; -*-

# run a file according to the shebang line:
#
# % run <file>
#
# is the same as:
#
# % ./<file>
#
# if the file is executable, but also works if it isn't

from __future__ import print_function

import sys
import shlex
import subprocess

# file to run
verbose = 0
timing = 0
argv = sys.argv[1:]
while True:
  if argv[0] == '-v':
    verbose = 1
  elif argv[0] == '-t':
    timing = 1
  else:
    break
  argv.pop(0)

# read the first line from the file
# #!<cmd> ...
cmd = None
with open(argv[0], 'r') as fh:
  for s in fh:
    # find the #! part
    i = s.find("#!")
    assert i != -1, "interpreter not found"
    cmd = shlex.split(s[i + 2:].strip()) + argv
    break

# quote argument x
def quote(x):
  plain = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-_+@:.,/'
  (s, q) = (list(), '')
  for c in x:
    if c in plain:
      s.append(c)
    else:
      s.extend(('\\', c))
      q = '"'
  return q + (''.join(s)) + q


def fprint(f, *args, **kw):
  print(*args, file=f, **kw)


if cmd:

  timer = None
  if timing:
    import time
    try:
      _timer = time.perf_counter
    except AttributeError:
      if sys.platform == 'win32':
        _timer = time.clock
      else:
        _timer = time.time
    timer = _timer()

  if verbose:
    fprint(sys.stdout, ">>> " + ' '.join(quote(x) for x in cmd))

  # run the command
  subprocess.call(cmd)

  if timer:
    t = _timer() - timer
    msg = "[timing] elapsed time: {t:.7f}s".format(t=t)
    u = 's'
    if t < 1.0: (t, u) = (1000 * t, 'ms')
    if t < 1.0: (t, u) = (1000 * t, 'us')
    msg += " ({t:.2f}{u})".format(t=t, u=u)
    fprint(sys.stderr, msg)
